@model List<NewAppBookShop.Models.Sach>

@{
    ViewData["Title"] = "Quản lý sách";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="page-inner">
    <div class="page-header d-flex flex-row justify-content-between">
        <div class="d-flex flex-row">
            <ul class="breadcrumbs mb-3">
                <li class="nav-home">
                    <a href="#">
                        <i class="icon-home"></i>
                    </a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Tài nguyên Sách</a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Sách</a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Danh sách</a>
                </li>
            </ul>
        </div>
        <div>
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addBookModal"><i class="fa-solid fa-plus"></i> Thêm sách</button>
        </div>


    </div>
    <div class="row">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Danh sách Sách</div>
            </div>
            <div class="card-body">
                <table class="table table-striped mt-3">
                    <thead>
                        <tr>
                            <th>Tên sách</th>
                            <th>Tác giả</th>
                            <th>Nhà xuất bản</th>
                            <th>Thể Loại</th>
                            <th>Giá bán</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var book in Model)
                        {
                            <tr>
                                <td>@book.TenSach</td>
                                <td>@book.MaTacGiaNavigation?.TenTg</td>
                                <td>@book.MaNxbNavigation?.TenNxb</td>
                                <td>@book.MaTheLoaiNavigation.TenTheLoai</td>
                                <td>@book.GiaBan</td>
                                <td class=" text-center">
                                    <span class="@(book.TrangThai ? "badge badge-success text-center" : "badge badge-danger text-center")">
                                        @(book.TrangThai ? "Xuất bản" : "Ngừng xuất bản")
                                    </span>
                                </td>

                                <td>
                                    <div class="dropdown">
                                        <button class="btn btn-default dropdown-toggle " type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fa-solid fa-ellipsis-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                            <li class="bg-info rounded">
                                                <button class="btn btn-info btn-sm my-1 rounded" onclick="openEditModal(@book.MaSach)">
                                                     Sửa
                                                </button>
                                            </li>
                                            <li class="bg-danger my-1 rounded">
                                                <button class="btn btn-danger btn-sm " style="white-space:nowrap" onclick="deleteBook(@book.MaSach)">
                                                    Ngừng xuất bản
                                                </button>
                                            </li>
                                            <li class="bg-success rounded">
                                                <button class="btn btn-success btn-sm my-1" style="white-space:nowrap" onclick="publish(@book.MaSach)">
                                                    Xuất bản
                                                </button>
                                            </li>
                                        </ul>
                                    </div>
                                </td>
                                
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- Modal Thêm sách -->
<div class="modal fade" id="addBookModal" tabindex="-1" aria-labelledby="addBookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBookModalLabel">Thêm sách mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addBookForm">
                    <div class="mb-3">
                        <label for="bookName" class="form-label">Tên sách</label>
                        <input type="text" class="form-control" id="bookName" required>
                    </div>
                    <div class="mb-3">
                        <label for="author" class="form-label">Tác giả</label>
                        <select class="form-select" id="author" required>
                            <option value="">Chọn tác giả</option>
                            @foreach (var author in ViewBag.Authors as List<NewAppBookShop.Models.TacGium>)
                            {
                                <option value="@author.MaTg">@author.TenTg</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="publisher" class="form-label">Nhà xuất bản</label>
                        <select class="form-select" id="publisher" required>
                            <option value="">Chọn nhà xuất bản</option>
                            @foreach (var publisher in ViewBag.Publishers as List<NewAppBookShop.Models.NhaXuatBan>)
                            {
                                <option value="@publisher.MaNxb">@publisher.TenNxb</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="category" class="form-label">Thể loại</label>
                        <select class="form-select" id="category" required>
                            <option value="">Chọn thể loại</option>
                            @foreach (var category in ViewBag.Category as List<NewAppBookShop.Models.TheLoai>)
                            {
                                <option value="@category.MaTheLoai">@category.TenTheLoai</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="price" class="form-label">Giá bán</label>
                        <input type="number" class="form-control" id="price" required>
                    </div>
                    <div class="mb-3">
                        <label for="Anh" class="form-label">Ảnh</label>
                        <input type="text" class="form-control" id="Anh" required>
                       
                    </div>
                    <div class="text-end">
                        <button type="submit" class="btn btn-primary">Lưu lại</button>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sửa sách -->
<div class="modal fade" id="editBookModal" tabindex="-1" aria-labelledby="editBookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editBookModalLabel">Sửa thông tin sách</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editBookForm">
                    <input type="hidden" id="editBookId">
                    <div class="mb-3">
                        <label for="editBookName" class="form-label">Tên sách</label>
                        <input type="text" class="form-control" id="editBookName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editAuthor" class="form-label">Tác giả</label>
                        <select class="form-select" id="editAuthor" required>
                            <option value="">Chọn tác giả</option>
                            @foreach (var author in ViewBag.Authors as List<NewAppBookShop.Models.TacGium>)
                            {
                                <option value="@author.MaTg">@author.TenTg</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editPublisher" class="form-label">Nhà xuất bản</label>
                        <select class="form-select" id="editPublisher" required>
                            <option value="">Chọn nhà xuất bản</option>
                            @foreach (var publisher in ViewBag.Publishers as List<NewAppBookShop.Models.NhaXuatBan>)
                            {
                                <option value="@publisher.MaNxb">@publisher.TenNxb</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editCategory" class="form-label">Thể loại</label>
                        <select class="form-select" id="editCategory" required>
                            <option value="">Chọn thể loại</option>
                            @foreach (var category in ViewBag.Category as List<NewAppBookShop.Models.TheLoai>)
                            {
                                <option value="@category.MaTheLoai">@category.TenTheLoai</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editPrice" class="form-label">Giá bán</label>
                        <input type="number" class="form-control" id="editPrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="editAnh" class="form-label">Ảnh</label>
                        <input type="text" class="form-control" id="editAnh" required>
                    </div>
                    <div class="text-end">
                        <button type="submit" class="btn btn-primary">Cập nhật</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
    function deleteBook(bookId) {
        console.log("Book ID: ", bookId);  // Kiểm tra bookId
        Swal.fire({
            title: 'Bạn có chắc chắn?',
            text: 'Sách này sẽ bị ngừng xuất bản!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Xóa',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Sửa lại Fetch request
                fetch(`/admin/books/delete/${bookId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'  // Đảm bảo có Accept header
                    }
                })
                    .then(response => response.json())  // Đảm bảo nhận lại dữ liệu JSON
                    .then(data => {
                        if (data.success) {
                            Swal.fire(
                                'Thông báo',
                                'Thay đổi trạng thái thành công',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Lỗi!',
                                data.message || 'Không thể thay đổi trạng thái sách. Vui lòng thử lại.',
                                'error'
                            );
                        }
                    })
                    .catch(() => {
                        Swal.fire(
                            'Lỗi!',
                            'Không thể thay đổi trạng thái sách. Vui lòng thử lại.',
                            'error'
                        );
                    });
            }
        });
    }
    function publish(bookId) {
        console.log("Book ID: ", bookId);  // Kiểm tra bookId
        Swal.fire({
            title: 'Bạn có chắc chắn?',
            text: 'Sách này sẽ xuất bản!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Xóa',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Sửa lại Fetch request
                fetch(`/admin/books/Pushlish/${bookId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'  // Đảm bảo có Accept header
                    }
                })
                    .then(response => response.json())  // Đảm bảo nhận lại dữ liệu JSON
                    .then(data => {
                        if (data.success) {
                            Swal.fire(
                                'Thông báo',
                                'Thay đổi trạng thái thành công',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Lỗi!',
                                data.message || 'Không thể thay đổi trạng thái sách. Vui lòng thử lại.',
                                'error'
                            );
                        }
                    })
                    .catch(() => {
                        Swal.fire(
                            'Lỗi!',
                            'Không thể thay đổi trạng thái sách. Vui lòng thử lại.',
                            'error'
                        );
                    });
            }
        });
    }

    document.getElementById("addBookForm").addEventListener("submit", function (event) {
        event.preventDefault();

        // Lấy thông tin từ form
        const bookName = document.getElementById("bookName").value;
        const authorId = document.getElementById("author").value;  // MaTacGia
        const publisherId = document.getElementById("publisher").value;  // MaNXB
        const price = document.getElementById("price").value;
        const Anh = document.getElementById("Anh").value; // Chuyển thành boolean (true hoặc false)
        const category = document.getElementById("category").value;  // TheLoai

        const bookData = {
            TenSach: bookName, // Tên sách
            MaTacGia: parseInt(authorId), // ID tác giả (dạng số)
            MaNxb: parseInt(publisherId), // ID nhà xuất bản (dạng số)
            GiaBan: parseFloat(price), // Giá bán (số thập phân)
            TrangThai: true, // Trạng thái (true/false)
            Anh: Anh, // Trạng thái (true/false)
            MaTheLoai: parseInt(category) // ID thể loại (dạng số)
        };

        // Gửi dữ liệu qua Fetch API
        fetch('/admin/books/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(bookData)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Thêm sách thành công!', '', 'success').then(() => {
                        location.reload();
                    });
                } else {
                    console.error(data.errors); // Debug lỗi
                    Swal.fire('Lỗi', data.message || 'Không thể thêm sách', 'error');
                }
            })
            .catch(error => {
                console.error('Lỗi khi thêm sách:', error);
                Swal.fire('Lỗi', 'Có lỗi xảy ra khi thêm sách. Vui lòng thử lại', 'error');
            });
    });

    function openEditModal(bookId) {
        // Gửi yêu cầu lấy thông tin sách theo ID
        fetch(`/admin/books/${bookId}`)
            .then(response => response.json())
            .then(data => {
                if (data) {
                    // Điền dữ liệu vào modal
                    document.getElementById("editBookId").value = data.maSach;
                    document.getElementById("editBookName").value = data.tenSach;
                    document.getElementById("editAuthor").value = data.maTacGia;
                    document.getElementById("editPublisher").value = data.maNxb;
                    document.getElementById("editCategory").value = data.maTheLoai;
                    document.getElementById("editPrice").value = data.giaBan;
                    document.getElementById("editAnh").value = data.anh;

                    // Hiển thị modal
                    new bootstrap.Modal(document.getElementById("editBookModal")).show();
                } else {
                    Swal.fire('Lỗi', 'Không tìm thấy thông tin sách.', 'error');
                }
            })
            .catch(error => {
                console.error('Lỗi khi lấy thông tin sách:', error);
                Swal.fire('Lỗi', 'Có lỗi xảy ra khi lấy thông tin sách.', 'error');
            });
    }

    document.getElementById("editBookForm").addEventListener("submit", function (event) {
        event.preventDefault();

        const bookId = document.getElementById("editBookId").value;
        const bookData = {
            TenSach: document.getElementById("editBookName").value,
            MaTacGia: parseInt(document.getElementById("editAuthor").value),
            MaNxb: parseInt(document.getElementById("editPublisher").value),
            MaTheLoai: parseInt(document.getElementById("editCategory").value),
            GiaBan: parseFloat(document.getElementById("editPrice").value),
            Anh: document.getElementById("editAnh").value
        };

        fetch(`/admin/books/update/${bookId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(bookData)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Cập nhật thành công!', '', 'success').then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Lỗi', data.message || 'Không thể cập nhật sách.', 'error');
                }
            })
            .catch(error => {
                console.error('Lỗi khi cập nhật sách:', error);
                Swal.fire('Lỗi', 'Có lỗi xảy ra khi cập nhật sách.', 'error');
            });
    });



</script>

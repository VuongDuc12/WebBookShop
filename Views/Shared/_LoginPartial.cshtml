@using Microsoft.AspNetCore.Identity
@using NewAppBookShop.Areas.Identity.Data


@inject SignInManager<APpUser> SignInManager
@inject UserManager<APpUser> UserManager

<ul class="navbar-nav d-flex justify-content-center align-items-center">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item d-flex flex-grow-1" style="width: 100%;">
        <a id="manage" class="nav-link text-dark fs-5"  style="width: 100%;" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item d-flex flex-grow-1" style="width: 100%;">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark fs-5"  style="width: 100%;">Logout</button>
        </form>
    </li>
}
else
{
      <li class="nav-item d-flex flex-grow-1" style="width: 100%;">
            <a class="nav-link text-dark fs-5" style="width: 100%;" asp-controller="Account" asp-action="Login">Login</a>
        </li>
        <li class="nav-item d-flex flex-grow-1" style="width: 100%;">
            <a class="nav-link text-dark fs-5"  style="width: 100%;" asp-controller="Account" asp-action="Register">Register</a>
        </li>
}
</ul>
